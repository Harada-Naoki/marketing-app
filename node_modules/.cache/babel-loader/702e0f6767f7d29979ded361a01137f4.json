{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nharada\\\\marketing-app\\\\src\\\\components\\\\Page1.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Link, useNavigate, useParams } from 'react-router-dom';\nimport apiRequest from '../utils/apiRequest';\nimport '../App.css';\nimport ChatBubble from '../components/ChatBubble';\nimport QuizQuestion from '../components/QuizQuestion';\nimport { BookOpen } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHAPTERS_COUNT = 7;\nconst chapterData = Array.from({\n  length: CHAPTERS_COUNT\n}, (_, i) => require(`../data/chapter1/chapter1_${i + 1}.js`));\nfunction Page1() {\n  _s();\n  var _quizQuestions$curren, _quizQuestions$curren2, _quizQuestions$curren3;\n  const {\n    chapterId\n  } = useParams();\n  const chapterIndex = parseInt(chapterId.split('_')[1], 10) - 1;\n  const navigate = useNavigate();\n  const [visibleStep, setVisibleStep] = useState(0);\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const [studyTime, setStudyTime] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const [inactiveStartTime, setInactiveStartTime] = useState(null);\n  const [allImagesLoaded, setAllImagesLoaded] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const chatContainerRef = useRef(null);\n  const inactivityTimer = useRef(null);\n  const hasLoadedProgress = useRef(false); // 進捗がロードされたかどうかを追跡するフラグ\n\n  const isValidChapter = chapterIndex >= 0 && chapterIndex < CHAPTERS_COUNT;\n  const chapter = isValidChapter ? chapterData[chapterIndex] : null;\n  const saveProgress = useCallback(async (options = {}) => {\n    const {\n      updateStartTime = false\n    } = options;\n    try {\n      const endTime = Date.now();\n      const elapsed = Math.floor((endTime - startTime) / 1000);\n      const totalStudyTime = studyTime + elapsed;\n      await apiRequest('/api/progress/update', {\n        method: 'POST',\n        data: {\n          chapterId: chapterId,\n          visibleStep: visibleStep,\n          quizStarted: quizStarted,\n          currentQuestionIndex: currentQuestionIndex,\n          score: score,\n          studyTime: totalStudyTime,\n          completed: options.completed || false\n        }\n      });\n      if (updateStartTime) {\n        setStartTime(Date.now());\n      }\n    } catch (error) {\n      console.error('Error saving progress', error);\n    }\n  }, [chapterId, visibleStep, quizStarted, currentQuestionIndex, score, studyTime, startTime]);\n  const completeChapter = useCallback(async () => {\n    try {\n      await saveProgress({\n        completed: true\n      });\n      if (chapterIndex < CHAPTERS_COUNT - 1) {\n        const nextChapterId = `1_${chapterIndex + 2}`;\n        navigate(`/marketing-app/Page1/${nextChapterId}`);\n        window.location.reload();\n      } else {\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error completing chapter', error);\n    }\n  }, [chapterId, chapterIndex, navigate, saveProgress]);\n  const loadProgress = useCallback(async () => {\n    try {\n      const response = await apiRequest(`/api/progress/${chapterId}`, {\n        method: 'GET'\n      });\n      if (response.data) {\n        setVisibleStep(response.data.visibleStep);\n        setQuizStarted(response.data.quizStarted);\n        setCurrentQuestionIndex(response.data.currentQuestionIndex);\n        setScore(response.data.score);\n        setStudyTime(response.data.studyTime);\n      }\n      hasLoadedProgress.current = true; // 進捗がロードされたことを記録する\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error loading progress', error);\n      setIsLoading(false);\n    }\n  }, [chapterId]);\n  useEffect(() => {\n    loadProgress();\n  }, [loadProgress]);\n  useEffect(() => {\n    if (!isValidChapter) {\n      navigate('/');\n      return;\n    }\n    const handleInactivity = () => {\n      setInactiveStartTime(Date.now());\n      if (hasLoadedProgress.current) {\n        // 進捗がロードされている場合のみ保存を行う\n        saveProgress();\n      }\n    };\n    const resetInactivityTimer = () => {\n      if (inactivityTimer.current) {\n        clearTimeout(inactivityTimer.current);\n      }\n      inactivityTimer.current = setTimeout(handleInactivity, 180000);\n    };\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        handleInactivity();\n      } else {\n        handleActivityResume();\n      }\n    };\n    const handleActivityResume = () => {\n      if (inactiveStartTime) {\n        const inactiveEndTime = Date.now();\n        const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000);\n        setInactiveStartTime(null);\n        setStartTime(prevTime => prevTime + inactiveDuration * 1000);\n      }\n      setStartTime(Date.now());\n      resetInactivityTimer();\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    window.addEventListener('focus', handleActivityResume);\n    window.addEventListener('blur', handleInactivity);\n    ['mousemove', 'keydown', 'touchstart', 'touchmove'].forEach(event => {\n      window.addEventListener(event, resetInactivityTimer);\n    });\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n      window.removeEventListener('focus', handleActivityResume);\n      window.removeEventListener('blur', handleInactivity);\n      ['mousemove', 'keydown', 'touchstart', 'touchmove'].forEach(event => {\n        window.removeEventListener(event, resetInactivityTimer);\n      });\n      if (inactivityTimer.current) {\n        clearTimeout(inactivityTimer.current);\n      }\n      if (hasLoadedProgress.current) {\n        // 進捗がロードされている場合のみ保存を行う\n        saveProgress();\n      }\n    };\n  }, [isValidChapter, navigate, startTime, studyTime, inactiveStartTime, saveProgress]);\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTo({\n        top: chatContainerRef.current.scrollHeight,\n        behavior: 'smooth'\n      });\n    }\n  }, [visibleStep, quizStarted, currentQuestionIndex, showFeedback, showResults, allImagesLoaded]);\n  useEffect(() => {\n    var _chatContainerRef$cur;\n    const images = (_chatContainerRef$cur = chatContainerRef.current) === null || _chatContainerRef$cur === void 0 ? void 0 : _chatContainerRef$cur.getElementsByTagName('img');\n    if (!images) return;\n    let loadedCount = 0;\n    const totalImages = images.length;\n    const handleImageLoad = () => {\n      loadedCount += 1;\n      if (loadedCount === totalImages) {\n        setAllImagesLoaded(true);\n      }\n    };\n    if (totalImages === 0) {\n      setAllImagesLoaded(true);\n    } else {\n      Array.from(images).forEach(img => {\n        if (img.complete) {\n          handleImageLoad();\n        } else {\n          img.addEventListener('load', handleImageLoad);\n          img.addEventListener('error', handleImageLoad);\n        }\n      });\n    }\n    return () => {\n      Array.from(images).forEach(img => {\n        img.removeEventListener('load', handleImageLoad);\n        img.removeEventListener('error', handleImageLoad);\n      });\n    };\n  }, [visibleStep, quizStarted, currentQuestionIndex]);\n  const showNextStep = useCallback(() => {\n    if (visibleStep < chapter.content.length - 1) {\n      setVisibleStep(prev => prev + 1);\n      setAllImagesLoaded(false);\n      saveProgress({\n        updateStartTime: true\n      });\n    } else {\n      setQuizStarted(true);\n      saveProgress({\n        updateStartTime: true\n      });\n    }\n  }, [visibleStep, chapter, saveProgress]);\n  const handleQuizAnswer = useCallback(selectedAnswer => {\n    const currentQuestion = chapter.quizQuestions[currentQuestionIndex];\n    const correct = selectedAnswer === currentQuestion.correctAnswer;\n    setIsCorrect(correct);\n    setShowFeedback(true);\n    if (correct) {\n      setScore(prev => prev + 1);\n    }\n    saveProgress();\n  }, [chapter, currentQuestionIndex, saveProgress]);\n  const nextQuestion = useCallback(() => {\n    setShowFeedback(false);\n    if (currentQuestionIndex < chapter.quizQuestions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      setShowResults(true);\n    }\n    saveProgress();\n  }, [currentQuestionIndex, chapter, saveProgress]);\n  if (!isValidChapter) return null;\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 25\n  }, this);\n  const {\n    title,\n    chapterOverview,\n    content,\n    quizQuestions\n  } = chapter;\n  const progressPercentage = (visibleStep + 1) / content.length * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chapter-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n          className: \"book-icon\",\n          size: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), visibleStep === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"overview-title\",\n          children: \"\\u30C1\\u30E3\\u30D7\\u30BF\\u30FC\\u6982\\u8981\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"overview-text\",\n          children: chapterOverview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        style: {\n          width: `${progressPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-content\",\n        children: [content.slice(0, visibleStep + 1).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.type === \"sectionTitle\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ChatBubble, {\n            sender: item.sender,\n            type: item.type,\n            text: item.text,\n            src: item.src,\n            alt: item.alt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)), quizStarted && /*#__PURE__*/_jsxDEV(QuizQuestion, {\n          question: (_quizQuestions$curren = quizQuestions[currentQuestionIndex]) === null || _quizQuestions$curren === void 0 ? void 0 : _quizQuestions$curren.question,\n          options: (_quizQuestions$curren2 = quizQuestions[currentQuestionIndex]) === null || _quizQuestions$curren2 === void 0 ? void 0 : _quizQuestions$curren2.options,\n          handleAnswer: handleQuizAnswer,\n          showFeedback: showFeedback,\n          isCorrect: isCorrect,\n          explanation: (_quizQuestions$curren3 = quizQuestions[currentQuestionIndex]) === null || _quizQuestions$curren3 === void 0 ? void 0 : _quizQuestions$curren3.explanation,\n          nextQuestion: nextQuestion,\n          currentQuestionIndex: currentQuestionIndex,\n          totalQuestions: quizQuestions.length,\n          score: score,\n          completeChapter: completeChapter,\n          showResults: showResults,\n          setShowResults: setShowResults\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), !quizStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showNextStep,\n        className: \"next-button\",\n        children: visibleStep < content.length - 1 ? \"次へ\" : \"確認テストを始める\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"\\u30DB\\u30FC\\u30E0\\u306B\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n}\n_s(Page1, \"oRii4YlGiuIezAwC2uj5KaiMlto=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Page1;\nexport default Page1;\nvar _c;\n$RefreshReg$(_c, \"Page1\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Link","useNavigate","useParams","apiRequest","ChatBubble","QuizQuestion","BookOpen","jsxDEV","_jsxDEV","CHAPTERS_COUNT","chapterData","Array","from","length","_","i","require","Page1","_s","_quizQuestions$curren","_quizQuestions$curren2","_quizQuestions$curren3","chapterId","chapterIndex","parseInt","split","navigate","visibleStep","setVisibleStep","quizStarted","setQuizStarted","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showFeedback","setShowFeedback","isCorrect","setIsCorrect","showResults","setShowResults","studyTime","setStudyTime","startTime","setStartTime","Date","now","inactiveStartTime","setInactiveStartTime","allImagesLoaded","setAllImagesLoaded","isLoading","setIsLoading","chatContainerRef","inactivityTimer","hasLoadedProgress","isValidChapter","chapter","saveProgress","options","updateStartTime","endTime","elapsed","Math","floor","totalStudyTime","method","data","completed","error","console","completeChapter","nextChapterId","window","location","reload","loadProgress","response","current","handleInactivity","resetInactivityTimer","clearTimeout","setTimeout","handleVisibilityChange","document","hidden","handleActivityResume","inactiveEndTime","inactiveDuration","prevTime","addEventListener","forEach","event","removeEventListener","scrollTo","top","scrollHeight","behavior","_chatContainerRef$cur","images","getElementsByTagName","loadedCount","totalImages","handleImageLoad","img","complete","showNextStep","content","prev","handleQuizAnswer","selectedAnswer","currentQuestion","quizQuestions","correct","correctAnswer","nextQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","title","chapterOverview","progressPercentage","className","size","style","width","ref","slice","map","item","index","type","text","sender","src","alt","question","handleAnswer","explanation","totalQuestions","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/nharada/marketing-app/src/components/Page1.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport '../App.css';\r\nimport ChatBubble from '../components/ChatBubble';\r\nimport QuizQuestion from '../components/QuizQuestion';\r\nimport { BookOpen } from 'lucide-react';\r\n\r\nconst CHAPTERS_COUNT = 7;\r\nconst chapterData = Array.from({ length: CHAPTERS_COUNT }, (_, i) => require(`../data/chapter1/chapter1_${i + 1}.js`));\r\n\r\nfunction Page1() {\r\n  const { chapterId } = useParams();\r\n  const chapterIndex = parseInt(chapterId.split('_')[1], 10) - 1;\r\n  const navigate = useNavigate();\r\n\r\n  const [visibleStep, setVisibleStep] = useState(0);\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [studyTime, setStudyTime] = useState(0);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n  const [inactiveStartTime, setInactiveStartTime] = useState(null);\r\n  const [allImagesLoaded, setAllImagesLoaded] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const chatContainerRef = useRef(null);\r\n  const inactivityTimer = useRef(null);\r\n  const hasLoadedProgress = useRef(false); // 進捗がロードされたかどうかを追跡するフラグ\r\n\r\n  const isValidChapter = chapterIndex >= 0 && chapterIndex < CHAPTERS_COUNT;\r\n  const chapter = isValidChapter ? chapterData[chapterIndex] : null;\r\n\r\n  const saveProgress = useCallback(async (options = {}) => {\r\n\r\n    const { updateStartTime = false } = options;\r\n    try {\r\n      const endTime = Date.now();\r\n      const elapsed = Math.floor((endTime - startTime) / 1000);\r\n      const totalStudyTime = studyTime + elapsed;\r\n\r\n      await apiRequest('/api/progress/update', {\r\n        method: 'POST',\r\n        data: {\r\n          chapterId: chapterId,\r\n          visibleStep: visibleStep,\r\n          quizStarted: quizStarted,\r\n          currentQuestionIndex: currentQuestionIndex,\r\n          score: score,\r\n          studyTime: totalStudyTime,\r\n          completed: options.completed || false,\r\n        }\r\n      });\r\n\r\n      if (updateStartTime) {\r\n        setStartTime(Date.now());\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving progress', error);\r\n    }\r\n  }, [chapterId, visibleStep, quizStarted, currentQuestionIndex, score, studyTime, startTime]);\r\n\r\n  const completeChapter = useCallback(async () => {\r\n    try {\r\n      await saveProgress({ completed: true });\r\n      if (chapterIndex < CHAPTERS_COUNT - 1) {\r\n        const nextChapterId = `1_${chapterIndex + 2}`;\r\n        navigate(`/marketing-app/Page1/${nextChapterId}`);\r\n        window.location.reload();\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error completing chapter', error);\r\n    }\r\n  }, [chapterId, chapterIndex, navigate, saveProgress]);\r\n\r\n  const loadProgress = useCallback(async () => {\r\n    try {\r\n      const response = await apiRequest(`/api/progress/${chapterId}`, {\r\n        method: 'GET'\r\n      });\r\n\r\n      if (response.data) {\r\n        setVisibleStep(response.data.visibleStep);\r\n        setQuizStarted(response.data.quizStarted);\r\n        setCurrentQuestionIndex(response.data.currentQuestionIndex);\r\n        setScore(response.data.score);\r\n        setStudyTime(response.data.studyTime);\r\n      }\r\n\r\n      hasLoadedProgress.current = true; // 進捗がロードされたことを記録する\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      console.error('Error loading progress', error);\r\n      setIsLoading(false);\r\n    }\r\n  }, [chapterId]);\r\n\r\n  useEffect(() => {\r\n    loadProgress();\r\n  }, [loadProgress]);\r\n\r\n  useEffect(() => {\r\n    if (!isValidChapter) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    const handleInactivity = () => {\r\n      setInactiveStartTime(Date.now());\r\n      if (hasLoadedProgress.current) { // 進捗がロードされている場合のみ保存を行う\r\n        saveProgress();\r\n      }\r\n    };\r\n\r\n    const resetInactivityTimer = () => {\r\n      if (inactivityTimer.current) {\r\n        clearTimeout(inactivityTimer.current);\r\n      }\r\n      inactivityTimer.current = setTimeout(handleInactivity, 180000);\r\n    };\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden) {\r\n        handleInactivity();\r\n      } else {\r\n        handleActivityResume();\r\n      }\r\n    };\r\n\r\n    const handleActivityResume = () => {\r\n      if (inactiveStartTime) {\r\n        const inactiveEndTime = Date.now();\r\n        const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000);\r\n        setInactiveStartTime(null);\r\n        setStartTime(prevTime => prevTime + inactiveDuration * 1000);\r\n      }\r\n      setStartTime(Date.now());\r\n      resetInactivityTimer();\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    window.addEventListener('focus', handleActivityResume);\r\n    window.addEventListener('blur', handleInactivity);\r\n    ['mousemove', 'keydown', 'touchstart', 'touchmove'].forEach(event => {\r\n      window.addEventListener(event, resetInactivityTimer);\r\n    });\r\n\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      window.removeEventListener('focus', handleActivityResume);\r\n      window.removeEventListener('blur', handleInactivity);\r\n      ['mousemove', 'keydown', 'touchstart', 'touchmove'].forEach(event => {\r\n        window.removeEventListener(event, resetInactivityTimer);\r\n      });\r\n\r\n      if (inactivityTimer.current) {\r\n        clearTimeout(inactivityTimer.current);\r\n      }\r\n\r\n      if (hasLoadedProgress.current) { // 進捗がロードされている場合のみ保存を行う\r\n        saveProgress();\r\n      }\r\n    };\r\n  }, [isValidChapter, navigate, startTime, studyTime, inactiveStartTime, saveProgress]);\r\n\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTo({\r\n        top: chatContainerRef.current.scrollHeight,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  }, [visibleStep, quizStarted, currentQuestionIndex, showFeedback, showResults, allImagesLoaded]);\r\n\r\n  useEffect(() => {\r\n    const images = chatContainerRef.current?.getElementsByTagName('img');\r\n    if (!images) return;\r\n\r\n    let loadedCount = 0;\r\n    const totalImages = images.length;\r\n\r\n    const handleImageLoad = () => {\r\n      loadedCount += 1;\r\n      if (loadedCount === totalImages) {\r\n        setAllImagesLoaded(true);\r\n      }\r\n    };\r\n\r\n    if (totalImages === 0) {\r\n      setAllImagesLoaded(true);\r\n    } else {\r\n      Array.from(images).forEach(img => {\r\n        if (img.complete) {\r\n          handleImageLoad();\r\n        } else {\r\n          img.addEventListener('load', handleImageLoad);\r\n          img.addEventListener('error', handleImageLoad);\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      Array.from(images).forEach(img => {\r\n        img.removeEventListener('load', handleImageLoad);\r\n        img.removeEventListener('error', handleImageLoad);\r\n      });\r\n    };\r\n  }, [visibleStep, quizStarted, currentQuestionIndex]);\r\n\r\n  const showNextStep = useCallback(() => {\r\n    if (visibleStep < chapter.content.length - 1) {\r\n      setVisibleStep(prev => prev + 1);\r\n      setAllImagesLoaded(false);\r\n      saveProgress({ updateStartTime: true });\r\n    } else {\r\n      setQuizStarted(true);\r\n      saveProgress({ updateStartTime: true });\r\n    }\r\n  }, [visibleStep, chapter, saveProgress]);\r\n\r\n  const handleQuizAnswer = useCallback((selectedAnswer) => {\r\n    const currentQuestion = chapter.quizQuestions[currentQuestionIndex];\r\n    const correct = selectedAnswer === currentQuestion.correctAnswer;\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n    if (correct) {\r\n      setScore(prev => prev + 1);\r\n    }\r\n    saveProgress();\r\n  }, [chapter, currentQuestionIndex, saveProgress]);\r\n\r\n  const nextQuestion = useCallback(() => {\r\n    setShowFeedback(false);\r\n    if (currentQuestionIndex < chapter.quizQuestions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      setShowResults(true);\r\n    }\r\n    saveProgress();\r\n  }, [currentQuestionIndex, chapter, saveProgress]);\r\n\r\n  if (!isValidChapter) return null;\r\n  if (isLoading) return <div>Loading...</div>;\r\n\r\n  const { title, chapterOverview, content, quizQuestions } = chapter;\r\n  const progressPercentage = ((visibleStep + 1) / content.length) * 100;\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <div className=\"chapter-header\">\r\n        <div className=\"title-container\">\r\n          <BookOpen className=\"book-icon\" size={50} />\r\n          <h1 className=\"main-title\">{title}</h1>\r\n        </div>\r\n\r\n        {visibleStep === 0 && (\r\n          <div className=\"overview-container\">\r\n            <h2 className=\"overview-title\">チャプター概要</h2>\r\n            <p className=\"overview-text\">{chapterOverview}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"progress-bar-container\">\r\n        <div className=\"progress-bar\" style={{ width: `${progressPercentage}%` }}></div>\r\n      </div>\r\n\r\n      <div className=\"chat-container\" ref={chatContainerRef}>\r\n        <div className=\"chat-content\">\r\n          {content.slice(0, visibleStep + 1).map((item, index) => (\r\n            <div key={index}>\r\n              {item.type === \"sectionTitle\" ? (\r\n                <h3 className=\"section-title\">{item.text}</h3>\r\n              ) : (\r\n                <ChatBubble sender={item.sender} type={item.type} text={item.text} src={item.src} alt={item.alt} />\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          {quizStarted && (\r\n            <QuizQuestion\r\n              question={quizQuestions[currentQuestionIndex]?.question}\r\n              options={quizQuestions[currentQuestionIndex]?.options}\r\n              handleAnswer={handleQuizAnswer}\r\n              showFeedback={showFeedback}\r\n              isCorrect={isCorrect}\r\n              explanation={quizQuestions[currentQuestionIndex]?.explanation}\r\n              nextQuestion={nextQuestion}\r\n              currentQuestionIndex={currentQuestionIndex}\r\n              totalQuestions={quizQuestions.length}\r\n              score={score}\r\n              completeChapter={completeChapter}\r\n              showResults={showResults}\r\n              setShowResults={setShowResults}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {!quizStarted && (\r\n        <div className=\"next-button-container\">\r\n          <button onClick={showNextStep} className=\"next-button\">\r\n            {visibleStep < content.length - 1 ? \"次へ\" : \"確認テストを始める\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"links-container\">\r\n        <Link to=\"/\">ホームに戻る</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}