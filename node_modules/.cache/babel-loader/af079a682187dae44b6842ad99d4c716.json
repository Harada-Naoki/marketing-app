{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst refreshAccessToken = async refreshToken => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/auth/token`, {\n      token: refreshToken\n    });\n    localStorage.setItem('token', response.data.accessToken);\n    return response.data.accessToken;\n  } catch (error) {\n    console.error('Error refreshing access token', error);\n    return null;\n  }\n};\nconst apiRequest = async (url, options = {}) => {\n  let token = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n  try {\n    const response = await axios({\n      url: `${API_BASE_URL}${url}`,\n      method: options.method || 'GET',\n      data: options.data || {},\n      headers: {\n        ...options.headers,\n        Authorization: token ? `Bearer ${token}` : ''\n      }\n    });\n    return response;\n  } catch (error) {\n    var _error$response;\n    console.error('Initial request error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    if (error.response && error.response.status === 403) {\n      token = await refreshAccessToken(refreshToken);\n      if (token) {\n        try {\n          const response = await axios({\n            url: `${API_BASE_URL}${url}`,\n            method: options.method || 'GET',\n            data: options.data || {},\n            headers: {\n              ...options.headers,\n              Authorization: `Bearer ${token}`\n            }\n          });\n          return response;\n        } catch (retryError) {\n          var _retryError$response;\n          console.error('Retry request error:', ((_retryError$response = retryError.response) === null || _retryError$response === void 0 ? void 0 : _retryError$response.data) || retryError.message);\n          throw retryError;\n        }\n      } else {\n        console.error('Token refresh failed');\n        window.location.href = '/marketing-app/login';\n      }\n    } else {\n      throw error;\n    }\n  }\n};\nexport default apiRequest;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","refreshAccessToken","refreshToken","response","post","token","localStorage","setItem","data","accessToken","error","console","apiRequest","url","options","getItem","method","headers","Authorization","_error$response","message","status","retryError","_retryError$response","window","location","href"],"sources":["C:/Users/nharada/marketing-app/src/utils/apiRequest.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst refreshAccessToken = async (refreshToken) => {\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/api/auth/token`, { token: refreshToken });\r\n    localStorage.setItem('token', response.data.accessToken);\r\n    return response.data.accessToken;\r\n  } catch (error) {\r\n    console.error('Error refreshing access token', error);\r\n    return null;\r\n  }\r\n};\r\n\r\nconst apiRequest = async (url, options = {}) => {\r\n  let token = localStorage.getItem('token');\r\n  const refreshToken = localStorage.getItem('refreshToken');\r\n\r\n  try {\r\n    const response = await axios({\r\n      url: `${API_BASE_URL}${url}`,\r\n      method: options.method || 'GET',\r\n      data: options.data || {},\r\n      headers: {\r\n        ...options.headers,\r\n        Authorization: token ? `Bearer ${token}` : ''\r\n      }\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error('Initial request error:', error.response?.data || error.message);\r\n\r\n    if (error.response && error.response.status === 403) {\r\n      token = await refreshAccessToken(refreshToken);\r\n      if (token) {\r\n        try {\r\n          const response = await axios({\r\n            url: `${API_BASE_URL}${url}`,\r\n            method: options.method || 'GET',\r\n            data: options.data || {},\r\n            headers: {\r\n              ...options.headers,\r\n              Authorization: `Bearer ${token}`\r\n            }\r\n          });\r\n          return response;\r\n        } catch (retryError) {\r\n          console.error('Retry request error:', retryError.response?.data || retryError.message);\r\n          throw retryError;\r\n        }\r\n      } else {\r\n        console.error('Token refresh failed');\r\n        window.location.href = '/marketing-app/login';\r\n      }\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n};\r\n\r\nexport default apiRequest;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,kBAAkB,GAAG,MAAOC,YAAY,IAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGP,YAAY,iBAAiB,EAAE;MAAEQ,KAAK,EAAEH;IAAa,CAAC,CAAC;IAC5FI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,QAAQ,CAACK,IAAI,CAACC,WAAW,CAAC;IACxD,OAAON,QAAQ,CAACK,IAAI,CAACC,WAAW;EAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAME,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC9C,IAAIT,KAAK,GAAGC,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;EACzC,MAAMb,YAAY,GAAGI,YAAY,CAACS,OAAO,CAAC,cAAc,CAAC;EAEzD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMP,KAAK,CAAC;MAC3BiB,GAAG,EAAE,GAAGhB,YAAY,GAAGgB,GAAG,EAAE;MAC5BG,MAAM,EAAEF,OAAO,CAACE,MAAM,IAAI,KAAK;MAC/BR,IAAI,EAAEM,OAAO,CAACN,IAAI,IAAI,CAAC,CAAC;MACxBS,OAAO,EAAE;QACP,GAAGH,OAAO,CAACG,OAAO;QAClBC,aAAa,EAAEb,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;MAC7C;IACF,CAAC,CAAC;IACF,OAAOF,QAAQ;EACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;IAAA,IAAAS,eAAA;IACdR,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAE,EAAAS,eAAA,GAAAT,KAAK,CAACP,QAAQ,cAAAgB,eAAA,uBAAdA,eAAA,CAAgBX,IAAI,KAAIE,KAAK,CAACU,OAAO,CAAC;IAE9E,IAAIV,KAAK,CAACP,QAAQ,IAAIO,KAAK,CAACP,QAAQ,CAACkB,MAAM,KAAK,GAAG,EAAE;MACnDhB,KAAK,GAAG,MAAMJ,kBAAkB,CAACC,YAAY,CAAC;MAC9C,IAAIG,KAAK,EAAE;QACT,IAAI;UACF,MAAMF,QAAQ,GAAG,MAAMP,KAAK,CAAC;YAC3BiB,GAAG,EAAE,GAAGhB,YAAY,GAAGgB,GAAG,EAAE;YAC5BG,MAAM,EAAEF,OAAO,CAACE,MAAM,IAAI,KAAK;YAC/BR,IAAI,EAAEM,OAAO,CAACN,IAAI,IAAI,CAAC,CAAC;YACxBS,OAAO,EAAE;cACP,GAAGH,OAAO,CAACG,OAAO;cAClBC,aAAa,EAAE,UAAUb,KAAK;YAChC;UACF,CAAC,CAAC;UACF,OAAOF,QAAQ;QACjB,CAAC,CAAC,OAAOmB,UAAU,EAAE;UAAA,IAAAC,oBAAA;UACnBZ,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAE,EAAAa,oBAAA,GAAAD,UAAU,CAACnB,QAAQ,cAAAoB,oBAAA,uBAAnBA,oBAAA,CAAqBf,IAAI,KAAIc,UAAU,CAACF,OAAO,CAAC;UACtF,MAAME,UAAU;QAClB;MACF,CAAC,MAAM;QACLX,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;QACrCc,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,sBAAsB;MAC/C;IACF,CAAC,MAAM;MACL,MAAMhB,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}