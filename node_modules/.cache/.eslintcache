[{"C:\\Users\\nharada\\marketing-app\\src\\index.js":"1","C:\\Users\\nharada\\marketing-app\\src\\App.js":"2","C:\\Users\\nharada\\marketing-app\\src\\LoginForm.js":"3","C:\\Users\\nharada\\marketing-app\\src\\RegisterForm.js":"4","C:\\Users\\nharada\\marketing-app\\src\\utils\\apiRequest.js":"5","C:\\Users\\nharada\\marketing-app\\src\\components\\Page1.js":"6","C:\\Users\\nharada\\marketing-app\\src\\components\\ChatBubble.js":"7","C:\\Users\\nharada\\marketing-app\\src\\components\\QuizQuestion.js":"8","C:\\Users\\nharada\\marketing-app\\src\\ProgressTracker.js":"9","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_2.js":"10","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_1.js":"11","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_3.js":"12","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_5.js":"13","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_6.js":"14","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_7.js":"15","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_4.js":"16","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter2\\chapter2_1.js":"17","C:\\Users\\nharada\\marketing-app\\src\\data\\chapter2\\chapter2_2.js":"18","C:\\Users\\nharada\\marketing-app\\src\\components\\Page2.js":"19"},{"size":230,"mtime":1720141044095,"results":"20","hashOfConfig":"21"},{"size":6981,"mtime":1724045776505,"results":"22","hashOfConfig":"21"},{"size":1908,"mtime":1723094869138,"results":"23","hashOfConfig":"21"},{"size":1968,"mtime":1722239289002,"results":"24","hashOfConfig":"21"},{"size":1893,"mtime":1723094713649,"results":"25","hashOfConfig":"21"},{"size":12044,"mtime":1724047052844,"results":"26","hashOfConfig":"21"},{"size":495,"mtime":1722413091533,"results":"27","hashOfConfig":"21"},{"size":2730,"mtime":1724045184437,"results":"28","hashOfConfig":"21"},{"size":5114,"mtime":1723694408746,"results":"29","hashOfConfig":"21"},{"size":10719,"mtime":1723004391934,"results":"30","hashOfConfig":"21"},{"size":10719,"mtime":1723004348803,"results":"31","hashOfConfig":"21"},{"size":10719,"mtime":1723004409319,"results":"32","hashOfConfig":"21"},{"size":10719,"mtime":1723004431112,"results":"33","hashOfConfig":"21"},{"size":10719,"mtime":1723004437348,"results":"34","hashOfConfig":"21"},{"size":10719,"mtime":1723004443647,"results":"35","hashOfConfig":"21"},{"size":10719,"mtime":1723004420445,"results":"36","hashOfConfig":"21"},{"size":10663,"mtime":1723005255179,"results":"37","hashOfConfig":"21"},{"size":10663,"mtime":1723005301630,"results":"38","hashOfConfig":"21"},{"size":9751,"mtime":1723019065653,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"p12g13",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},"C:\\Users\\nharada\\marketing-app\\src\\index.js",[],["80","81"],"C:\\Users\\nharada\\marketing-app\\src\\App.js",[],"C:\\Users\\nharada\\marketing-app\\src\\LoginForm.js",[],"C:\\Users\\nharada\\marketing-app\\src\\RegisterForm.js",[],"C:\\Users\\nharada\\marketing-app\\src\\utils\\apiRequest.js",[],"C:\\Users\\nharada\\marketing-app\\src\\components\\Page1.js",[],"C:\\Users\\nharada\\marketing-app\\src\\components\\ChatBubble.js",[],"C:\\Users\\nharada\\marketing-app\\src\\components\\QuizQuestion.js",[],"C:\\Users\\nharada\\marketing-app\\src\\ProgressTracker.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_2.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_1.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_3.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_5.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_6.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_7.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter1\\chapter1_4.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter2\\chapter2_1.js",[],"C:\\Users\\nharada\\marketing-app\\src\\data\\chapter2\\chapter2_2.js",[],"C:\\Users\\nharada\\marketing-app\\src\\components\\Page2.js",["82"],"import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport apiRequest from '../utils/apiRequest';\r\nimport '../App.css';\r\nimport ChatBubble from '../components/ChatBubble';\r\nimport QuizQuestion from '../components/QuizQuestion';\r\nimport { BookOpen } from 'lucide-react';\r\n\r\nconst CHAPTERS_COUNT = 2;\r\nconst chapterData = Array.from({ length: CHAPTERS_COUNT }, (_, i) => require(`../data/chapter2/chapter2_${i + 1}.js`));\r\n\r\nfunction Page2() {\r\n  const { chapterId } = useParams();\r\n  const chapterIndex = parseInt(chapterId.split('_')[1], 10) - 1;\r\n  const navigate = useNavigate();\r\n\r\n  const [visibleStep, setVisibleStep] = useState(0);\r\n  const [quizStarted, setQuizStarted] = useState(false);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showFeedback, setShowFeedback] = useState(false);\r\n  const [isCorrect, setIsCorrect] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n  const [studyTime, setStudyTime] = useState(0);\r\n  const [startTime, setStartTime] = useState(Date.now());\r\n  const [inactiveStartTime, setInactiveStartTime] = useState(null);\r\n  const [allImagesLoaded, setAllImagesLoaded] = useState(false);\r\n\r\n  const chatContainerRef = useRef(null);\r\n  const inactivityTimer = useRef(null);\r\n\r\n  const isValidChapter = chapterIndex >= 0 && chapterIndex < CHAPTERS_COUNT;\r\n  const chapter = isValidChapter ? chapterData[chapterIndex] : null;\r\n\r\n  const saveStudyTime = useCallback(async (time) => {\r\n    try {\r\n      await apiRequest('/api/progress/update', {\r\n        method: 'POST',\r\n        data: {\r\n          chapterId: chapterId,\r\n          studyTime: time\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving study time', error);\r\n    }\r\n  }, [chapterId]);\r\n\r\n  const completeChapter = useCallback(async () => {\r\n    try {\r\n      const endTime = Date.now();\r\n      const elapsed = Math.floor((endTime - startTime) / 1000);\r\n      const totalStudyTime = studyTime + elapsed;\r\n      await saveStudyTime(totalStudyTime);\r\n\r\n      await apiRequest('/api/progress/update', {\r\n        method: 'POST',\r\n        data: {\r\n          chapterId: chapterId,\r\n          completed: true,\r\n          studyTime: totalStudyTime\r\n        }\r\n      });\r\n\r\n      if (chapterIndex < CHAPTERS_COUNT - 1) {\r\n        const nextChapterId = `1_${chapterIndex + 2}`;\r\n        navigate(`/marketing-app/Page1/${nextChapterId}`);\r\n        window.location.reload();\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error completing chapter', error);\r\n    }\r\n  }, [chapterId, chapterIndex, navigate, saveStudyTime, startTime, studyTime]);\r\n\r\n  useEffect(() => {\r\n    if (!isValidChapter) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    const handleInactivity = () => {\r\n      setInactiveStartTime(Date.now());\r\n    };\r\n\r\n    const resetInactivityTimer = () => {\r\n      if (inactivityTimer.current) {\r\n        clearTimeout(inactivityTimer.current);\r\n      }\r\n      inactivityTimer.current = setTimeout(handleInactivity, 180000);\r\n    };\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.hidden) {\r\n        handleInactivity();\r\n      } else {\r\n        handleActivityResume();\r\n      }\r\n    };\r\n\r\n    const handleActivityResume = () => {\r\n      if (inactiveStartTime) {\r\n        const inactiveEndTime = Date.now();\r\n        const inactiveDuration = Math.floor((inactiveEndTime - inactiveStartTime) / 1000);\r\n        setInactiveStartTime(null);\r\n        setStartTime(prevTime => prevTime + inactiveDuration * 1000);\r\n      }\r\n      setStartTime(Date.now());\r\n      resetInactivityTimer();\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    window.addEventListener('focus', handleActivityResume);\r\n    window.addEventListener('blur', handleInactivity);\r\n    ['mousemove', 'keydown', 'touchstart', 'touchmove'].forEach(event => {\r\n      window.addEventListener(event, resetInactivityTimer);\r\n    });\r\n\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n      window.removeEventListener('focus', handleActivityResume);\r\n      window.removeEventListener('blur', handleInactivity);\r\n      ['mousemove', 'keydown', 'touchstart', 'touchmove'].forEach(event => {\r\n        window.removeEventListener(event, resetInactivityTimer);\r\n      });\r\n\r\n      if (inactivityTimer.current) {\r\n        clearTimeout(inactivityTimer.current);\r\n      }\r\n\r\n      const endTime = Date.now();\r\n      const elapsed = Math.floor((endTime - startTime) / 1000);\r\n      saveStudyTime(studyTime + elapsed);\r\n    };\r\n  }, [isValidChapter, navigate, startTime, studyTime, inactiveStartTime, saveStudyTime]);\r\n\r\n  useEffect(() => {\r\n    if (chatContainerRef.current) {\r\n      chatContainerRef.current.scrollTo({\r\n        top: chatContainerRef.current.scrollHeight,\r\n        behavior: 'smooth'\r\n      });\r\n    }\r\n  }, [visibleStep, quizStarted, currentQuestionIndex, showFeedback, showResults, allImagesLoaded]);\r\n\r\n  useEffect(() => {\r\n    const images = chatContainerRef.current?.getElementsByTagName('img');\r\n    if (!images) return;\r\n\r\n    let loadedCount = 0;\r\n    const totalImages = images.length;\r\n\r\n    const handleImageLoad = () => {\r\n      loadedCount += 1;\r\n      if (loadedCount === totalImages) {\r\n        setAllImagesLoaded(true);\r\n      }\r\n    };\r\n\r\n    if (totalImages === 0) {\r\n      setAllImagesLoaded(true);\r\n    } else {\r\n      Array.from(images).forEach(img => {\r\n        if (img.complete) {\r\n          handleImageLoad();\r\n        } else {\r\n          img.addEventListener('load', handleImageLoad);\r\n          img.addEventListener('error', handleImageLoad);\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      Array.from(images).forEach(img => {\r\n        img.removeEventListener('load', handleImageLoad);\r\n        img.removeEventListener('error', handleImageLoad);\r\n      });\r\n    };\r\n  }, [visibleStep, quizStarted, currentQuestionIndex]);\r\n\r\n  const showNextStep = useCallback(() => {\r\n    if (visibleStep < chapter.content.length - 1) {\r\n      setVisibleStep(prev => prev + 1);\r\n      setAllImagesLoaded(false);\r\n    } else {\r\n      setQuizStarted(true);\r\n    }\r\n  }, [visibleStep, chapter]);\r\n\r\n  const handleQuizAnswer = useCallback((selectedAnswer) => {\r\n    const currentQuestion = chapter.quizQuestions[currentQuestionIndex];\r\n    const correct = selectedAnswer === currentQuestion.correctAnswer;\r\n    setIsCorrect(correct);\r\n    setShowFeedback(true);\r\n    if (correct) {\r\n      setScore(prev => prev + 1);\r\n    }\r\n  }, [chapter, currentQuestionIndex]);\r\n\r\n  const nextQuestion = useCallback(() => {\r\n    setShowFeedback(false);\r\n    if (currentQuestionIndex < chapter.quizQuestions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      setShowResults(true);\r\n    }\r\n  }, [currentQuestionIndex, chapter]);\r\n\r\n  if (!isValidChapter) return null;\r\n\r\n  const { title, chapterOverview, content, quizQuestions } = chapter;\r\n  const progressPercentage = ((visibleStep + 1) / content.length) * 100;\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <div className=\"chapter-header\">\r\n        <div className=\"title-container\">\r\n          <BookOpen className=\"book-icon\" size={50} />\r\n          <h1 className=\"main-title\">{title}</h1>\r\n        </div>\r\n      \r\n        {visibleStep === 0 && (\r\n          <div className=\"overview-container\">\r\n            <h2 className=\"overview-title\">チャプター概要</h2>\r\n            <p className=\"overview-text\">{chapterOverview}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"progress-bar-container\">\r\n        <div className=\"progress-bar\" style={{ width: `${progressPercentage}%` }}></div>\r\n      </div>\r\n      \r\n      <div className=\"chat-container\" ref={chatContainerRef}>\r\n        <div className=\"chat-content\">\r\n          {content.slice(0, visibleStep + 1).map((item, index) => (\r\n            <div key={index}>\r\n              {item.type === \"sectionTitle\" ? (\r\n                <h3 className=\"section-title\">{item.text}</h3>\r\n              ) : (\r\n                <ChatBubble sender={item.sender} type={item.type} text={item.text} src={item.src} alt={item.alt} />\r\n              )}\r\n            </div>\r\n          ))}\r\n\r\n          {quizStarted && (\r\n            <QuizQuestion\r\n              question={quizQuestions[currentQuestionIndex]?.question}\r\n              options={quizQuestions[currentQuestionIndex]?.options}\r\n              handleAnswer={handleQuizAnswer}\r\n              showFeedback={showFeedback}\r\n              isCorrect={isCorrect}\r\n              explanation={quizQuestions[currentQuestionIndex]?.explanation}\r\n              nextQuestion={nextQuestion}\r\n              currentQuestionIndex={currentQuestionIndex}\r\n              totalQuestions={quizQuestions.length}\r\n              score={score}\r\n              completeChapter={completeChapter}\r\n              showResults={showResults}\r\n              setShowResults={setShowResults}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {!quizStarted && (\r\n        <div className=\"next-button-container\">\r\n          <button onClick={showNextStep} className=\"next-button\">\r\n            {visibleStep < content.length - 1 ? \"次へ\" : \"確認テストを始める\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"links-container\">\r\n        {/* {chapterIndex < CHAPTERS_COUNT - 1 && (\r\n          <Link to={`/marketing-app/Page1/1_${chapterIndex + 2}`}>次の章へ</Link>\r\n        )} */}\r\n        <Link to=\"/\">ホームに戻る</Link>  \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page2;",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":24,"column":21,"nodeType":"89","messageId":"90","endLine":24,"endColumn":33},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'setStudyTime' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]